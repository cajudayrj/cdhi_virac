{"version":3,"sources":["scripts.js","map.js","sidebar.js","banner-slider.js","doctor-modal.js","theme.js"],"names":["initMap","mapContainer","uluru","lat","lng","map","google","maps","Map","zoom","center","Marker","position","toggleSideBar","e","preventDefault","sidebar","classList","contains","body","remove","toggle","setTimeout","add","atfSlider","document","querySelector","options","type","startAt","perView","gap","autoplay","animationDuration","slide","Glide","mount","modals","querySelectorAll","closeModal","forEach","m","addEventListener","dataId","dataset","doctorId","modal","close","modalClose","sideBtn","sidebarOverlay","closeSidebar","window","innerWidth","$","ready","doctors","doctor","hdr","acf","getField","alert"],"mappings":"AAAA,YCGA,SAASA,WACL,GAAIC,aAEA,CAAA,GAAIC,IAAUC,IAAK,WAAYC,IAAK,aAEhCC,EAAM,GAAIC,QAAOC,KAAKC,IACtBP,cAAgBQ,KAAM,GAAIC,OAAQR,GAEzB,IAAII,QAAOC,KAAKI,QAASC,SAAUV,EAAOG,IAAKA,KCLpE,QAASQ,eAAcC,GACnBA,EAAEC,iBACEC,QAAQC,UAAUC,SAAS,WAC3BC,KAAKF,UAAUG,OAAO,aACtBJ,QAAQC,UAAUI,OAAO,UACzBC,WAAW,WACPN,QAAQC,UAAUI,OAAO,cAC1B,OAEHF,KAAKF,UAAUM,IAAI,aACnBP,QAAQC,UAAUI,OAAO,aACzBC,WAAW,WACPN,QAAQC,UAAUI,OAAO,WAC1B,MClBX,GAAMG,WAAYC,SAASC,cAAc,cACnCC,SACFC,KAAM,WACNC,QAAS,EACTC,QAAS,EACTC,IAAK,EACLC,SAAU,IACVC,kBAAmB,IAGvB,IAAIT,UAAW,CACX,GAAMU,OAAQ,GAAIC,OAAMX,UAAWG,QACnCO,OAAME,QCbV,GAAMC,QAASZ,SAASa,iBAAiB,6BACnCC,WAAad,SAASa,iBAAiB,gBACvCnB,KAAOM,SAASa,iBAAiB,OAEvCD,QAAOG,QAAQ,SAAAC,GAAA,MAAKA,GAAEC,iBAAiB,QAAS,SAAU5B,GACtDA,EAAEC,gBACF,IAAM4B,GAASF,EAAEG,QAAQC,SACnBC,EAAQrB,SAASC,cAAT,uBAA8CiB,EAC5DG,GAAM7B,UAAUM,IAAI,UACpBJ,KAAKF,UAAUM,IAAI,aACnBD,WAAW,WACPwB,EAAM7B,UAAUM,IAAI,cACrB,SAGPgB,WAAWC,QAAQ,SAAAO,GAAA,MAASA,GAAML,iBAAiB,QAAS,SAAU5B,GAClEA,EAAEC,gBACF,IAAM4B,GAASI,EAAMH,QAAQI,WACvBF,EAAQrB,SAASC,cAAT,uBAA8CiB,EAC5DG,GAAM7B,UAAUG,OAAO,aACvBE,WAAW,WACPwB,EAAM7B,UAAUG,OAAO,UACvBD,KAAKF,UAAUG,OAAO,cACvB,QHtBP,IAAMnB,cAAewB,SAASC,cAAc,QCDtCuB,QAAUxB,SAASC,cAAc,eACjCP,KAAOM,SAASC,cAAc,QAC9BV,QAAUS,SAASC,cAAc,8BACjCwB,eAAiBlC,QAAQU,cAAc,eACvCyB,aAAenC,QAAQU,cAAc,iBAmB3CuB,SAAQP,iBAAiB,QAAS7B,eAClCqC,eAAeR,iBAAiB,QAAS7B,eACzCsC,aAAaT,iBAAiB,QAAS7B,eAEvCuC,OAAOV,iBAAiB,SAAU,SAAU5B,GACpCsC,OAAOC,YAAc,MACrBrC,QAAQC,UAAUG,OAAO,UACzBJ,QAAQC,UAAUG,OAAO,gBG9BjCkC,EAAE7B,UAAU8B,MAAM,WACd,GAAMC,GAAU/B,SAASa,iBAAiB,sBAE1CkB,GAAQhB,QAAQ,SAAAiB,GAAA,MAAUA,GAAOf,iBAAiB,QAAS,SAAU5B,GACjEA,EAAEC,gBACF,IAAM2C,GAAMC,IAAIC,SAAS,SAAU,SACnCC,OAAMH,EAAA","file":"scripts.js","sourcesContent":["'use strict';var atfSlider=document.querySelector('.atf-glide');var options={type:'carousel',startAt:0,perView:1,gap:0,autoplay:4000,animationDuration:600};if(atfSlider){var slide=new Glide(atfSlider,options);slide.mount();}\n'use strict';var modals=document.querySelectorAll('.doctor-profile-container');var closeModal=document.querySelectorAll('.close-modal');var body=document.querySelectorAll('body');modals.forEach(function(m){return m.addEventListener('click',function(e){e.preventDefault();var dataId=m.dataset.doctorId;var modal=document.querySelector('.doctor-modal.modal-'+dataId);modal.classList.add('opened');body.classList.add('no-scroll');setTimeout(function(){modal.classList.add('animation');},100);});});closeModal.forEach(function(close){return close.addEventListener('click',function(e){e.preventDefault();var dataId=close.dataset.modalClose;var modal=document.querySelector('.doctor-modal.modal-'+dataId);modal.classList.remove('animation');setTimeout(function(){modal.classList.remove('opened');body.classList.remove('no-scroll');},300);});});\n'use strict';// Initialize and add the map\nvar mapContainer=document.querySelector('#map');function initMap(){if(mapContainer){// The location of Uluru\nvar uluru={lat:13.5900749,lng:124.1933298};// The map, centered at Uluru\nvar map=new google.maps.Map(mapContainer,{zoom:15,center:uluru});// The marker, positioned at Uluru\nvar marker=new google.maps.Marker({position:uluru,map:map});}}\n'use strict';var sideBtn=document.querySelector('.burger-btn');var body=document.querySelector('body');var sidebar=document.querySelector('.mobile-sidebar-navigation');var sidebarOverlay=sidebar.querySelector('.bg-overlay');var closeSidebar=sidebar.querySelector('.close-sidebar');function toggleSideBar(e){e.preventDefault();if(sidebar.classList.contains('opened')){body.classList.remove('no-scroll');sidebar.classList.toggle('opened');setTimeout(function(){sidebar.classList.toggle('animation');},300);}else{body.classList.add('no-scroll');sidebar.classList.toggle('animation');setTimeout(function(){sidebar.classList.toggle('opened');},100);}}sideBtn.addEventListener('click',toggleSideBar);sidebarOverlay.addEventListener('click',toggleSideBar);closeSidebar.addEventListener('click',toggleSideBar);window.addEventListener('resize',function(e){if(window.innerWidth>=768){sidebar.classList.remove('opened');sidebar.classList.remove('animation');}});\n'use strict';$(document).ready(function(){var doctors=document.querySelectorAll('.schedule-container');doctors.forEach(function(doctor){return doctor.addEventListener('click',function(e){e.preventDefault();var hdr=acf.getField('header','option');alert(hdr['address']);});});});","// Initialize and add the map\nconst mapContainer = document.querySelector('#map');\n\nfunction initMap() {\n    if (mapContainer) {\n        // The location of Uluru\n        var uluru = { lat: 13.5900749, lng: 124.1933298 };\n        // The map, centered at Uluru\n        var map = new google.maps.Map(\n            mapContainer, { zoom: 15, center: uluru });\n        // The marker, positioned at Uluru\n        var marker = new google.maps.Marker({ position: uluru, map: map });\n    }\n}","const sideBtn = document.querySelector('.burger-btn');\nconst body = document.querySelector('body');\nconst sidebar = document.querySelector('.mobile-sidebar-navigation');\nconst sidebarOverlay = sidebar.querySelector('.bg-overlay');\nconst closeSidebar = sidebar.querySelector('.close-sidebar');\n\nfunction toggleSideBar(e) {\n    e.preventDefault();\n    if (sidebar.classList.contains('opened')) {\n        body.classList.remove('no-scroll');\n        sidebar.classList.toggle('opened');\n        setTimeout(() => {\n            sidebar.classList.toggle('animation');\n        }, 300)\n    } else {\n        body.classList.add('no-scroll');\n        sidebar.classList.toggle('animation');\n        setTimeout(() => {\n            sidebar.classList.toggle('opened');\n        }, 100)\n    }\n}\n\nsideBtn.addEventListener('click', toggleSideBar);\nsidebarOverlay.addEventListener('click', toggleSideBar);\ncloseSidebar.addEventListener('click', toggleSideBar);\n\nwindow.addEventListener('resize', function (e) {\n    if (window.innerWidth >= 768) {\n        sidebar.classList.remove('opened');\n        sidebar.classList.remove('animation');\n    }\n})\n","\nconst atfSlider = document.querySelector('.atf-glide');\nconst options = {\n    type: 'carousel',\n    startAt: 0,\n    perView: 1,\n    gap: 0,\n    autoplay: 4000,\n    animationDuration: 600\n}\n\nif (atfSlider) {\n    const slide = new Glide(atfSlider, options);\n    slide.mount();\n}","const modals = document.querySelectorAll('.doctor-profile-container');\nconst closeModal = document.querySelectorAll('.close-modal');\nconst body = document.querySelectorAll('body');\n\nmodals.forEach(m => m.addEventListener('click', function (e) {\n    e.preventDefault();\n    const dataId = m.dataset.doctorId;\n    const modal = document.querySelector(`.doctor-modal.modal-${dataId}`);\n    modal.classList.add('opened');\n    body.classList.add('no-scroll');\n    setTimeout(() => {\n        modal.classList.add('animation');\n    }, 100)\n}))\n\ncloseModal.forEach(close => close.addEventListener('click', function (e) {\n    e.preventDefault();\n    const dataId = close.dataset.modalClose;\n    const modal = document.querySelector(`.doctor-modal.modal-${dataId}`);\n    modal.classList.remove('animation');\n    setTimeout(() => {\n        modal.classList.remove('opened');\n        body.classList.remove('no-scroll');\n    }, 300)\n}))","$(document).ready(function () {\n    const doctors = document.querySelectorAll('.schedule-container');\n\n    doctors.forEach(doctor => doctor.addEventListener('click', function (e) {\n        e.preventDefault();\n        const hdr = acf.getField('header', 'option');\n        alert(hdr['address']);\n    }))\n})"]}